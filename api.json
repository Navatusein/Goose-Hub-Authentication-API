{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0",
    "title": "Authentication API",
    "description": "Authorization service for the Goose Hub thesis project of the Sad Cats team",
    "contact": {
      "name": "Bohdan",
      "email": "boghdan.kutsulima@gmail.com",
      "url": "https://github.com/Navatusein"
    },
    "license": {
      "url": "https://github.com/Navatusein/Goose-Hub-Authentication-API/blob/main/LICENSE",
      "name": "MIT"
    }
  },
  "servers": [
    {
      "url": "https://goose-hub.sadkittens.duckdns.org/api/authentication-api/v1",
      "description": "Main Server"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "unauthorized"
        ],
        "summary": "Login User",
        "description": "Endpoint to request login from the frontend",
        "operationId": "post-login",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            },
            "headers": {
              "refresh-token": {
                "schema": {
                  "type": "string"
                },
                "description": "Token for refresh jwt token"
              }
            }
          },
          "400": {
            "description": "Invalid login or password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                },
                "examples": {
                  "Invalid login or password": {
                    "value": {
                      "id": "b3a6f458-49d3-4ed6-923e-0613d6579e1b",
                      "message": "Invalid login or password"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [],
        "servers": [
          {
            "url": "https://goose-hub.sadkittens.duckdns.org/api/authentication-api/v1",
            "description": "Main Server"
          }
        ]
      }
    },
    "/register": {
      "post": {
        "tags": [
          "unauthorized"
        ],
        "summary": "Register User",
        "description": "Endpoint to request a regestation from the frontend",
        "operationId": "post-register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Register success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            },
            "headers": {
              "refresh-token": {
                "schema": {
                  "type": "string"
                },
                "description": "Token for refresh jwt token"
              }
            }
          },
          "400": {
            "description": "Login already taken",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                },
                "examples": {
                  "Login already taken": {
                    "value": {
                      "id": "b3a6f458-49d3-4ed6-923e-0613d6579e1b",
                      "message": "Login already taken"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [],
        "servers": [
          {
            "url": "https://goose-hub.sadkittens.duckdns.org/api/authentication-api/v1",
            "description": "Main Server"
          }
        ]
      }
    },
    "/refresh": {
      "post": {
        "tags": [
          "unauthorized"
        ],
        "summary": "Refresh JWT Token",
        "description": "Endpoint to request a refresh of the jwt token from the frontend",
        "operationId": "post-refresh",
        "parameters": [
          {
            "name": "refresh-token",
            "in": "cookie",
            "description": "Token for refresh jwt token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            },
            "headers": {
              "refresh-token": {
                "schema": {
                  "type": "string"
                },
                "description": "Token for refresh jwt token"
              }
            }
          },
          "400": {
            "description": "Invalid refresh token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                },
                "examples": {
                  "Invalid refresh token": {
                    "value": {
                      "id": "b3a6f458-49d3-4ed6-923e-0613d6579e1b",
                      "message": "Invalid refresh token"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [],
        "servers": [
          {
            "url": "https://goose-hub.sadkittens.duckdns.org/api/authentication-api/v1",
            "description": "Main Server"
          }
        ]
      }
    },
    "/update-user": {
      "put": {
        "tags": [
          "authorized"
        ],
        "summary": "Update User Data",
        "description": "Endpoint to request user data update in the database from the frontend",
        "operationId": "put-update-user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Old and new passwords doesn't match"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtToken": []
          }
        ],
        "servers": [
          {
            "url": "https://goose-hub.sadkittens.duckdns.org/api/authentication-api/v1",
            "description": "Main Server"
          }
        ]
      }
    }
  },
  "tags": [
    {
      "name": "authorized",
      "description": "Endpoint for which you need to log in"
    },
    {
      "name": "unauthorized",
      "description": "Endpoint for which you do not need to be logged in"
    }
  ],
  "components": {
    "securitySchemes": {
      "jwtToken": {
        "type": "apiKey",
        "name": "barrer ",
        "in": "header"
      }
    },
    "schemas": {
      "LoginDto": {
        "type": "object",
        "title": "LoginRequest",
        "description": "Contains login data fron frontend",
        "properties": {
          "login": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "login",
          "password"
        ],
        "examples": [
          {
            "login": "string",
            "password": "string"
          }
        ]
      },
      "UserDto": {
        "type": "object",
        "title": "LoginResponse",
        "properties": {
          "jwtToken": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        },
        "required": [
          "jwtToken",
          "userId"
        ],
        "examples": [
          {
            "jwtToken": "string",
            "userId": "string"
          }
        ]
      },
      "ErrorDto": {
        "type": "object",
        "title": "ErrorResponse",
        "properties": {
          "id": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "message"
        ]
      },
      "RegisterDto": {
        "type": "object",
        "title": "RegisterRequest",
        "properties": {
          "login": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "required": [
          "login",
          "password",
          "email"
        ]
      },
      "RefreshDto": {
        "type": "object",
        "title": "RefreshRequest",
        "properties": {
          "jwtToken": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        }
      },
      "UpdateUserDto": {
        "type": "object",
        "title": "UpdateUserDto",
        "properties": {
          "userId": {
            "type": "string"
          },
          "login": {
            "type": "string"
          },
          "oldPassword": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "required": [
          "userId",
          "login",
          "oldPassword",
          "newPassword",
          "email"
        ]
      }
    }
  },
  "security": [
    {},
    {
      "jwtToken": []
    }
  ]
}
